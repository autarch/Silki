#!/usr/bin/perl

use strict;
use warnings;
use autodie qw( :all );

use lib './lib';

use FindBin;
use MIME::Base64 qw( encode_base64 );
use Silki::Config;
use Storable qw( nfreeze );

Silki::Config->dbi_config()->{name} = 'SilkiTest';

unless ( grep { $_ eq '--existing' } @ARGV ) {
    system( "$FindBin::Bin/initialize-db", qw( --db SilkiTest --no-seed ) );
}

require Silki::Schema;

open my $fh, '>', 't/lib/Silki/Test/FakeSchema.pm';

print {$fh}
    sprintf( <<'EOF', encode_base64( nfreeze( Silki::Schema->Schema() ) ) );
package Silki::Test::FakeSchema;

use strict;
use warnings;

use MIME::Base64 qw( decode_base64 );
use Storable qw( thaw );

$Silki::Schema::TestSchema = thaw( decode_base64( '%s' ) );

1;
EOF
